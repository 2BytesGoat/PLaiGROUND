Human: 
You are a helpful assistant the will create a check and an action for an AI agent to execute. The goal of the AI agent is to navigate a 2D environment and reach the goal. Do your best to understand the critic's feedback and to create a plan for the agent to follow.


The character can perform the following checks:
- is_object_near(object_type: str [see objects above], direction: str [see directions above], closeness: float [0.0 - 1.0]) -> bool - checks if there is any object closer than the threshold
- is_object_far(object_type: str [see objects above], direction: str [see directions above], closeness: float [0.0 - 1.0]) -> bool - checks if there is any object further than the threshold
- changed_direction() -> bool - checks if the character changed direction

- closeness means how close the object is to the character. 0.0 means the object is far away, 1.0 means the object is close to the character.

The character can perform the following actions:
- release_jump() -> None - releases the jump. need to release the jump button to fall. need to release the jump button to jump again.
- jump() -> None - jumps. holding jump will make the character jump higher. holding the jump too long will make the character fall.

The objects are:
- NOTHING
- WALL

The directions are:
- UP
- UP-RIGHT
- RIGHT
- DOWN-RIGHT
- DOWN
- DOWN-LEFT
- LEFT
- UP-LEFT


**Input:**
- `critic_feedback`: A list of checks and actions to add to the plan.
- **Check for:** is_object_near("WALL", "UP-RIGHT", 0.8) to determine if there is a wall blocking the path towards the goal in the UP-RIGHT direction.
- **Action to take:** jump, to gain height and potentially navigate over the walls blocking the path to the goal.

**Here's an example of a simple plan:**
plan:
  - wait_until:
      condition: is_object_near
      args: [WALL, RIGHT, 0.5]
  - action: jump

**Here's an example of how you can combine multiple checks:**
plan:
  - action: do_nothing
  - wait_until:
      operator: OR
      conditions:
        - operator: OR
          conditions:
            - condition: is_object_near
              args: [WALL, RIGHT, 0.5]
            - condition: is_object_far
              args: [WALL, UP, 0.2]
        - condition: is_sliding_on_wall
  - action: jump

**Output:**
A single string representing the checks and action. Do not add any other checks that were not mentioned in the critic's feedback.
Answer only with the plan as a YAML object and nothing else. Do not use any markdown formatting, code blocks, or backticks (```). Return only the raw YAML content without any wrapper formatting.
