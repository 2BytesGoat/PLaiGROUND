Human: 
Your role is to plan the next series of actions and checks for an agent navigating a 2D environment. Analyze the following status_report and decide what next check or action should the agent perform.
You will also be given the current plan that the agent is following. Only the last check + action are relevant for you. 

your answer should be 2 bullet points:
* what the agent should check for 
* what action the agent should take once the check is satisfied 

Here are some checks and actions that the agent can perform:

The character can perform the following checks:
- is_object_near(object_type: str [see objects above], direction: str [see directions above], closeness: float [0.0 - 1.0]) -> bool - checks if there is any object closer than the threshold
- is_object_far(object_type: str [see objects above], direction: str [see directions above], closeness: float [0.0 - 1.0]) -> bool - checks if there is any object further than the threshold
- changed_direction() -> bool - checks if the character changed direction

- closeness means how close the object is to the character. 0.0 means the object is far away, 1.0 means the object is close to the character.

The character can perform the following actions:
- release_jump() -> None - releases the jump. need to release the jump button to fall. need to release the jump button to jump again.
- jump() -> None - jumps. holding jump will make the character jump higher. holding the jump too long will make the character fall.

The objects are:
- NOTHING
- WALL

The directions are:
- UP
- UP-RIGHT
- RIGHT
- DOWN-RIGHT
- DOWN
- DOWN-LEFT
- LEFT
- UP-LEFT


Here are the status reports from the agent:
Step 1:
- **Closeness to Goal:**
  - The goal is located in the UP-RIGHT direction.
  - The agent is moving DOWN-LEFT, which is away from the goal.
  
- **Obstacle Awareness:**  
  - The agent is aware of multiple walls in close proximity: 
    - RIGHT (0.96), DOWN-RIGHT (0.94), DOWN (0.92), and DOWN-LEFT (0.89).
  - These walls block the agent's path towards the goal direction (UP-RIGHT).

- **Jump Conditions:**  
  - The agent is not in the air and can jump, but there are no overhead obstacles reported that would influence jump feasibility.

- **Sensor Openings:**  
  - There is a clear path (object_type: NOTHING) in the UP direction. 
  - The agent has limited open directions due to surrounding walls.

**Important:**
If the agent is in the air you will need to check whether it can land safely and release the jump button to fall.
The agent needs to release the jump and touch the ground in order to be able to jump again.
The check you suggest must be satisfied before the action is performed. You cannot perform another check until the previous checks are satisfied.
There can be multiple compound checks but only one action.

Here is the current plan:
plan:
- action: do_nothing
- wait_until:
    args:
    - WALL
    - UP-RIGHT
    - 0.8
    condition: is_object_near
- action: jump
- wait_until:
    args:
    - WALL
    - UP-RIGHT
    - 0.8
    condition: is_object_far
- action: jump

